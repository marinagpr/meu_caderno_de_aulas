---
title: "Regressão Linear, Não Linear e Análise de Resíduos"
format: html
---

### Regressão linear

A regressão linear é uma das técnicas estatísticas mais usadas para analisar relações entre variáveis. No R, essa análise pode ser feita de forma simples e poderosa com a função `lm()`. Ela busca modelar a relação entre uma variável resposta contínua (como produtividade, altura, consumo) e uma ou mais variáveis explicativas (como adubação, idade, peso), assumindo uma relação linear entre elas.

```{r}
#| include: false

library(gsheet)
library(ggplot2)
antifungicos <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=2023059672#gid=2023059672")

interaction.plot(antifungicos$dose, antifungicos$treat, antifungicos$severity)

p1 <- antifungicos |> 
  ggplot(aes(factor(dose), severity*100)) +
  geom_jitter(width = 0.1)

p2 <- antifungicos |> 
  ggplot(aes(factor(dose), severity*100)) +
  geom_jitter(width = 0.1)
library(patchwork)
p1 + p2

```

```{r}
m_anti <- lm(severity ~ treat*dose, data = antifungicos)
```

Cria um modelo linear explicando a variável `severity` (severidade) em função dos fatores `treat` (tratamento), `dose`, e sua interação (`treat*dose`).

### Regressão Não Linear

Regressão Não Linear é uma técnica estatística utilizada quando a relação entre as variáveis independentes e a variável dependente não pode ser adequadamente descrita por uma linha reta, como ocorre na regressão linear. Em muitos fenômenos biológicos, agronômicos e ambientais, os dados seguem padrões curvilíneos, como crescimento de plantas, degradação de substâncias ou resposta a doses de fertilizantes, sendo necessário utilizar modelos não lineares como logísticos, exponenciais ou sigmoidais. Nessa abordagem, os parâmetros do modelo são estimados por métodos iterativos, como o algoritmo de Gauss-Newton, para minimizar a soma dos quadrados dos resíduos. A escolha de um modelo não linear adequado deve ser baseada no conhecimento do processo estudado, garantindo que o modelo reflita o comportamento teórico esperado. A análise inclui avaliar a qualidade do ajuste, verificar resíduos e interpretar os parâmetros estimados, que muitas vezes possuem significado biológico direto, como taxa de crescimento ou capacidade máxima. Dessa forma, a regressão não linear se torna uma ferramenta essencial para modelar fenômenos complexos, permitindo previsões e interpretações mais realistas do comportamento dos dados ao longo do tempo ou sob diferentes condições experimentais.

```{r}
#| message: false
#| warning: false

library(dplyr)

fungi <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=465348652#gid=465348652")

#vizualiza

fungi |> 
  group_by(code, dose) |> 
  summarise(germination = mean(germination)) |> 
  ggplot(aes(dose, germination)) +
  geom_point()+
  geom_line() +
  facet_wrap(~ code)

#Ajuste de modelo não linear para um isolado

FGT43 <- fungi |> 
  group_by(code, dose) |> 
  summarize(germination = mean(germination)) |> 
  filter(code == "FGT43")

library(drc)

m43 <- drm(germination ~ dose, 
           data = FGT43,
           fct = LL.3())
# AIC - quanto menor melhor LL.3 foi melhor que W2.3 e W1.3
# Tem que testar para outros isolados
summary(m43)
AIC(m43)
plot(m43)
ED(m43, 50) #estimando Ec50

library(ec50estimator)

df_ec50 = estimate_EC50(germination ~ dose,
                        data = fungi,
                        isolate_col = "code",
                        strata_col = "state",
                        interval = "delta",
                        fct = drc::LL.3())

df_ec50 |> 
  ggplot(aes(reorder(ID, Estimate), Estimate)) +
  geom_point()+
  coord_flip()

df_ec50 |> 
  ggplot(aes(x = Estimate)) +
  geom_histogram(bins = 5, color = "white")
  
```

### Verificação de Resíduos

Usa o pacote `DHARMa` para simular e diagnosticar os resíduos, verificando:

-   Normalidade dos resíduos

-   Homogeneidade de variâncias

-   Possíveis outliers

-   Autocorrelação

```{r}
#| warning: false
library(DHARMa)
library(emmeans)

anova(m_anti) 

plot(simulateResiduals(m_anti))

media_anti <- emmeans(m_anti, ~treat | dose)
media_anti
library(multcomp)
cld(media_anti) 
library(agricolae)
cv.model(m_anti)


```

**DHARMa plot:**

-   Verifica se os resíduos apresentam distribuição normal e variâncias homogêneas.

-   Se houver padrões ou outliers extremos, pode indicar violação de pressupostos.

### Modelo Linear Misto 

Um modelo linear misto é uma ferramenta estatística utilizada para analisar dados que possuem tanto efeitos fixos quanto efeitos aleatórios em sua estrutura. Os efeitos fixos correspondem aos fatores de interesse principal no estudo, como diferentes tratamentos ou doses aplicadas, enquanto os efeitos aleatórios representam fontes de variação não controladas diretamente, como blocos, indivíduos ou locais, permitindo controlar essa variabilidade sem precisar analisá-la isoladamente. Esses modelos são amplamente utilizados em experimentos agrícolas e de campo, pois permitem avaliar o efeito dos tratamentos enquanto consideram a variação entre blocos ou repetições, garantindo resultados mais realistas e precisos mesmo quando há dependência entre as observações. Dessa forma, os modelos lineares mistos contribuem para análises mais robustas e confiáveis, sendo fundamentais em estudos que envolvem dados com estrutura hierárquica ou medidas repetidas ao longo do tempo.

```{r}
#| include: false
library(dplyr)

milho <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1345524759#gid=1345524759") 
#parcelas subdivididas

milho |>
  ggplot(aes(hybrid, index, color = method)) +
  geom_jitter(width = 0.1) +
  coord_flip() #nome na horizontal no gráfico

milho$hybrid_block <- interaction(milho$hybrid,milho$block) #criou-se a interação hibrido-bloco (método 1)

milho |> 
  mutate(hybrid_block = interaction(hybrid,block)) #criou-se a interação hibrido-bloco (método 2)

```

```{r}
library(lme4) #modelo misto (modelo aleatório)

m_milho <- lmer(index  ~ hybrid*method + (1|block:hybrid_block), data = milho)
car::Anova(m_milho)
plot(simulateResiduals(m_milho))

media_milho <- emmeans(m_milho, ~ method | hybrid)
cld(media_milho, Letters = letters)

m_milho2 <- lmer(yield  ~ hybrid*method + (1|block:hybrid_block), data = milho)
car::Anova(m_milho2)
plot(simulateResiduals(m_milho2))

media_milho2 <- emmeans(m_milho2, ~ method | hybrid)
cld(media_milho2, Letters = letters)
```

-   **Efeitos fixos:** `hybrid`, `method`, e sua interação.

-    **Efeito aleatório:** intercepto por `block:hybrid_block`, controlando variação entre parcelas.
